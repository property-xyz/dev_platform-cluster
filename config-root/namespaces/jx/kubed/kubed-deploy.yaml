# Source: kubed/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubed
  namespace: jx
  labels:
    helm.sh/chart: kubed-v0.12.0
    app.kubernetes.io/name: kubed
    app.kubernetes.io/instance: kubed
    app.kubernetes.io/version: "v0.12.0"
    app.kubernetes.io/managed-by: Helm
    gitops.jenkins-x.io/pipeline: 'namespaces'
  annotations:
    wave.pusher.com/update-on-config-change: 'true'
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubed
      app.kubernetes.io/instance: kubed
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubed
        app.kubernetes.io/instance: kubed
      annotations:
        checksum/apiregistration.yaml: ea53d87a3632254b2b088c9b82b1effed596fd67825208ff55b429a88fd7a586
    spec:
      serviceAccountName: kubed
      containers:
        - name: kubed
          securityContext: {}
          image: appscode/kubed:v0.12.0
          imagePullPolicy: IfNotPresent
          args:
            - run
            - --v=3
            - --secure-port=8443
            - --audit-log-path=-
            - --tls-cert-file=/var/serving-cert/tls.crt
            - --tls-private-key-file=/var/serving-cert/tls.key
            - --use-kubeapiserver-fqdn-for-aks=true
            - --enable-analytics=true
            - --cluster-name=unicorn
          ports:
            - containerPort: 8443
          resources: {}
          volumeMounts:
            - name: config
              mountPath: /srv/kubed
            - name: scratch
              mountPath: /tmp
            - mountPath: /var/serving-cert
              name: serving-cert
      volumes:
        - name: config
          secret:
            secretName: kubed
        - name: scratch
          emptyDir: {}
        - name: serving-cert
          secret:
            defaultMode: 420
            secretName: kubed-apiserver-cert
      securityContext:
        fsGroup: 65535
